from aiogram import F
from aiogram import Router, types
from aiogram.filters import Text
from aiogram.types import Message
from urllib.parse import urlparse

from bot.services.yandex_api import download_yandex_music_track
from bot.utils.storage import save_temp_audio
from config import AUDIO_TEMP_DIR

router = Router()

@router.message(Text(startswith=['https://music.yandex.ru', 'music.yandex.ru']))
async def handle_yandex_music_link(message: Message):
    try:
        url = message.text
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç—Ä–µ–∫–∞ –∏–∑ URL
        parsed_url = urlparse(url)
        path_parts = parsed_url.path.split('/')
        track_id = path_parts[-1] if path_parts[-1] else path_parts[-2]
        
        await message.answer("‚è≥ –°–∫–∞—á–∏–≤–∞—é —Ç—Ä–µ–∫...")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ç—Ä–µ–∫
        audio_data, track_info = await download_yandex_music_track(track_id)
        if not audio_data:
            return await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ç—Ä–µ–∫")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        file_path = await save_temp_audio(AUDIO_TEMP_DIR, audio_data, f"{track_info['artist']} - {track_info['title']}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        with open(file_path, 'rb') as audio_file:
            await message.answer_audio(
                audio_file,
                title=track_info['title'],
                performer=track_info['artist'],
                caption=f"üéµ {track_info['artist']} - {track_info['title']}"
            )
            
    except Exception as e:
        logging.error(f"Error in handle_yandex_music_link: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞")